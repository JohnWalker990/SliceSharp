// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace SliceSharp.Cli
{
    /// <summary>
    /// File ignore rules (bin/obj, Migrations, Tests, generated files).
    /// </summary>
    internal sealed class FileIgnoreRules
    {
        #region PRIVATE-FIELDS
        private readonly List<Regex> _regexes;
        #endregion

        #region CTOR
        /// <summary>
        /// Initializes a new instance of the FileIgnoreRules class.
        /// </summary>
        public FileIgnoreRules(IEnumerable<string> patterns)
        {
            _regexes = patterns.Select(p => new Regex(p, RegexOptions.IgnoreCase | RegexOptions.Compiled)).ToList();
        }
        #endregion

        #region PUBLIC-METHODS
        /// <summary>
        /// Returns true if the file path should be ignored.
        /// </summary>
        public bool IsIgnored(string? filePath)
        {
            if (string.IsNullOrEmpty(filePath)) return true;
            var norm = filePath.Replace('/', '\\');
            return _regexes.Any(r => r.IsMatch(norm));
        }
        #endregion
    }
}
